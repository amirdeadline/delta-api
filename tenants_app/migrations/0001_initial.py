# Generated by Django 5.0.6 on 2024-05-14 12:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=255)),
                ('external_id', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ESPDHGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ESPEncryption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ESPHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ESPPFS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IKEDHGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IKEEncryption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IKEHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IKERPF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InterfaceRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InterfaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LACPHashOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('unit', models.CharField(max_length=100)),
                ('ppu', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('cloud', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoutingProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShareTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='VRFRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants_app.customer')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='customers_tags', to='tenants_app.sharetag')),
            ],
        ),
        migrations.CreateModel(
            name='DeletedTenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('schema_name', models.CharField(max_length=255)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('snapshot', models.TextField(blank=True, max_length=200, null=True)),
                ('config', models.URLField(blank=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='SDWANSoftware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('production', models.BooleanField(default=True)),
                ('url', models.URLField()),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='sdwan_software_tags', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SDWANController',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('mgmt_ip', models.GenericIPAddressField()),
                ('mgmt_url', models.URLField()),
                ('pub_ip', models.GenericIPAddressField()),
                ('pub_url', models.URLField()),
                ('certificate', models.TextField()),
                ('enabled', models.BooleanField(default=True)),
                ('dedicated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.region')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='sdwan_controllers', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SCE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('total_capacity', models.IntegerField()),
                ('available_capacity', models.IntegerField()),
                ('mgmt_ip', models.GenericIPAddressField()),
                ('mgmt_url', models.URLField()),
                ('certificate', models.TextField()),
                ('enabled', models.BooleanField(default=True)),
                ('dedicated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.region')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='sces', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SASEController',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('mgmt_ip', models.GenericIPAddressField()),
                ('mgmt_url', models.URLField()),
                ('pub_ip', models.GenericIPAddressField()),
                ('pub_url', models.URLField()),
                ('certificate', models.TextField()),
                ('enabled', models.BooleanField(default=True)),
                ('dedicated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.region')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='sase_controllers', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='region',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, related_name='regions', to='tenants_app.sharetag'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('unit', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants_app.productcategory')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='products_tags', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('unit', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='licenses', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True, unique=True)),
                ('schema_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('snapshot', models.TextField(blank=True, max_length=200, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('production', models.BooleanField(default=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('config', models.URLField(blank=True)),
                ('admins', models.ManyToManyField(related_name='tenant_admins', to='tenants_app.adminuser')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.customer')),
                ('licenses', models.ManyToManyField(related_name='tenant_licenses', to='tenants_app.license')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='tenants_app.tenant')),
                ('products', models.ManyToManyField(related_name='tenant_products', to='tenants_app.product')),
                ('softwares', models.ManyToManyField(related_name='tenant_softwares', to='tenants_app.sdwansoftware')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='tenants_tags', to='tenants_app.sharetag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='tenants_app.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.JSONField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=200)),
                ('number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants_app.customer')),
                ('tags', models.ManyToManyField(blank=True, null=True, related_name='contacts_tags', to='tenants_app.sharetag')),
            ],
            options={
                'unique_together': {('name', 'customer')},
            },
        ),
    ]
